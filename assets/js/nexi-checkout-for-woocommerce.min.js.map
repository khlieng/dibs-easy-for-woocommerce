{"version":3,"file":"nexi-checkout-for-woocommerce.min.js","mappings":"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","sources":["webpack://dibs-easy-for-woocommerce/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://dibs-easy-for-woocommerce/./assets/js/nexi-checkout-for-woocommerce.js"],"sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","/**\n * @member wcDibsEasy\n *\n */\njQuery(function ($) {\n    if (typeof wcDibsEasy === \"undefined\") {\n        return false\n    }\n    /**\n     * The main object.\n     *\n     * @type {Object} dibsEasyForWoocommerce\n     */\n    const dibsEasyForWoocommerce = {\n        bodyEl: $(\"body\"),\n        paymentMethodEl: $('input[name=\"payment_method\"]'),\n        dibsCheckout: null,\n        blocked: false,\n        selectAnotherSelector: \"#dibs-easy-select-other\",\n        checkoutInitiated: wcDibsEasy.checkoutInitiated,\n        dibsOrderProcessing: false,\n        checkoutFormSelector: \"form.checkout\",\n        standardWooFields: wcDibsEasy.standard_woo_checkout_fields,\n        wooTerms: \"form.checkout #terms\",\n\n        /**\n         * Initialize the gateway\n         */\n        init() {\n            $(document).ready(dibsEasyForWoocommerce.loadDibs)\n            dibsEasyForWoocommerce.bodyEl.on(\n                \"click\",\n                dibsEasyForWoocommerce.selectAnotherSelector,\n                dibsEasyForWoocommerce.changeFromDibsEasy\n            )\n        },\n\n        /**\n         * Check if DIBS Easy is the selected gateway.\n         */\n        dibsIsSelected() {\n            if (dibsEasyForWoocommerce.paymentMethodEl.length > 0) {\n                dibsEasyForWoocommerce.paymentMethod = dibsEasyForWoocommerce.paymentMethodEl.filter(\":checked\").val()\n                if (\"dibs_easy\" === dibsEasyForWoocommerce.paymentMethod) {\n                    return true\n                }\n            }\n            return false\n        },\n        /**\n         * Triggers on document ready.\n         */\n        loadDibs() {\n            if (dibsEasyForWoocommerce.dibsIsSelected()) {\n                dibsEasyForWoocommerce.moveExtraCheckoutFields()\n                dibsEasyForWoocommerce.initDibsCheckout()\n                dibsEasyForWoocommerce.bodyEl.on(\"update_checkout\", dibsEasyForWoocommerce.updateCheckout)\n                dibsEasyForWoocommerce.bodyEl.on(\"updated_checkout\", dibsEasyForWoocommerce.updatedCheckout)\n            }\n        },\n        /**\n         * Triggers after a successful payment.\n         *\n         * @param {Object} response\n         */\n        paymentCompleted(response) {\n            dibsEasyForWoocommerce.logToFile(`Payment completed is triggered with payment id: ${response.paymentId}`)\n            const redirectUrl = sessionStorage.getItem(\"redirectNets\")\n            if (redirectUrl) {\n                window.location.href = redirectUrl\n            }\n        },\n\n        /**\n         *  Display login error\n         *\n         * @param {string} message\n         */\n        displayMustLoginError(message) {\n            const mustLoginClass = \"woocommerce-NoticeGroupwoocommerce-NoticeGroup-updateOrderReview\"\n            const mustLoginNotice = `<div class=\"${mustLoginClass}\">\n\t\t\t\t<ul class=\"woocommerce-error\" role=\"alert\">\n\t\t\t\t\t<li>${message}</li>\n\t\t\t\t</ul>\n\t\t\t</div>`\n            dibsEasyForWoocommerce.checkoutFormSelector.prepend(mustLoginNotice)\n        },\n        /**\n         * Update WC form if needed\n         *\n         * @param {Object} data\n         */\n        updateAddress(data) {\n            if (\"yes\" === data.updateNeeded) {\n                $(\"#billing_country\").val(data.country)\n                $(\"#shipping_country\").val(data.country)\n                $(\"#billing_postcode\").val(data.postCode)\n                $(\"#shipping_postcode\").val(data.postCode)\n            }\n\n            if (\"yes\" === data.mustLogin) {\n                // Customer might need to log in. Inform customer and freeze DIBS checkout.\n                dibsEasyForWoocommerce.displayMustLoginError(data.mustLoginMessage)\n                dibsEasyForWoocommerce.dibsCheckout.freezeCheckout()\n\n                const etop = dibsEasyForWoocommerce.checkoutFormSelector.offset().top\n                $(\"html, body\").animate(\n                    {\n                        scrollTop: etop,\n                    },\n                    1000\n                )\n            } else {\n                // All good release checkout and trigger update_checkout event\n                dibsEasyForWoocommerce.dibsCheckout.thawCheckout()\n                $(document.body).trigger(\"update_checkout\")\n            }\n        },\n\n        updateCheckout() {\n            console.log(\"update_checkout\")\n            if (window.Dibs !== undefined) {\n                // lock iframe\n                dibsEasyForWoocommerce.dibsCheckout.freezeCheckout()\n            }\n        },\n        updatedCheckout() {\n            console.log(\"updated_checkout\")\n            if (window.Dibs !== undefined) {\n                // unlock iframe\n                dibsEasyForWoocommerce.dibsCheckout.thawCheckout()\n                $(\"#dibs-order-review\").unblock()\n            }\n        },\n        /**\n         * Triggers whenever customer updates address information\n         *\n         * @param {Object} address\n         */\n        addressChanged(address) {\n            dibsEasyForWoocommerce.logToFile(\"Address changed is triggered.\")\n            if (address) {\n                console.log(\"address-changed\")\n                console.log(address)\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    async: true,\n                    url: wcDibsEasy.customer_address_updated_url,\n                    data: {\n                        action: \"customer_address_updated\",\n                        address,\n                        nonce: wcDibsEasy.nets_checkout_nonce,\n                    },\n                    success(response) {},\n                    error(response) {},\n                    complete(response) {\n                        console.log(\"COMPLETED\")\n                        console.log(\"customer_address_updated \")\n                        console.log(response.responseJSON.data)\n                        dibsEasyForWoocommerce.updateAddress(response.responseJSON.data)\n                    },\n                })\n            }\n        },\n        /**\n         * Init Dibs Easy Checkout\n         */\n        initDibsCheckout() {\n            // Constructs a new Checkout object.\n            dibsEasyForWoocommerce.dibsCheckout = new Dibs.Checkout({\n                checkoutKey: wcDibsEasy.privateKey,\n                paymentId: wcDibsEasy.dibs_payment_id,\n                containerId: \"dibs-complete-checkout\",\n                language: wcDibsEasy.locale,\n            })\n            dibsEasyForWoocommerce.dibsCheckout.on(\"pay-initialized\", dibsEasyForWoocommerce.getDibsEasyOrder)\n            dibsEasyForWoocommerce.dibsCheckout.on(\"payment-completed\", dibsEasyForWoocommerce.paymentCompleted)\n            dibsEasyForWoocommerce.dibsCheckout.on(\"address-changed\", dibsEasyForWoocommerce.addressChanged)\n        },\n        /**\n         * Triggers when customer clicks the pay button.\n         * Gets the Nexi Checkout order and starts the order submission\n         *\n         * @param {string} paymentId\n         */\n        getDibsEasyOrder(paymentId) {\n            dibsEasyForWoocommerce.dibsOrderProcessing = true\n            dibsEasyForWoocommerce.logToFile(`Pay initialized is triggered with payment id: ${paymentId}`)\n            $(document.body).trigger(\"dibs_pay_initialized\")\n            $.ajax({\n                type: \"POST\",\n                dataType: \"json\",\n                async: true,\n                url: wcDibsEasy.get_order_data_url,\n                data: {\n                    action: \"payment_success\",\n                    paymentId,\n                    nonce: wcDibsEasy.nets_checkout_nonce,\n                },\n                success(data) {\n                    console.log(data)\n                    if (false === data.success) {\n                        console.log(\"PaymentID already exist in order\")\n                        console.log(data)\n                        dibsEasyForWoocommerce.failOrder(\n                            \"ajax-error\",\n                            '<div class=\"woocommerce-error\">' + data.data + \"</div>\"\n                        )\n                        if (data.data.redirect) {\n                            window.location.href = data.data.redirect\n                        }\n                    } else {\n                        dibsEasyForWoocommerce.setAddressData(data)\n                    }\n                },\n                error(data) {\n                    console.log(data, \"error_data\")\n                },\n                complete(data) {},\n            })\n        },\n        /**\n         * Sets the customer data.\n         *\n         * @param {Object} data\n         */\n        setAddressData(data) {\n            dibsEasyForWoocommerce.logToFile('Received \"customer data\" from Nexi Checkout')\n            const consumer = data.data.payment.consumer\n            const { billingAddress, shippingAddress } = consumer\n\n            // billingAddress have country with 3 letters.\n\n            // check do we have data\n            const hasBillingData = typeof billingAddress === \"object\" && !Array.isArray(billingAddress)\n            // Use shipping data if billing data do not exist.\n            $(\"#billing_address_1\").val(hasBillingData ? billingAddress.addressLine1 : shippingAddress.addressLine1)\n            $(\"#billing_postcode\").val(hasBillingData ? billingAddress.postalCode : shippingAddress.postalCode)\n            $(\"#billing_city\").val(hasBillingData ? billingAddress.city : shippingAddress.city)\n            $(\"#billing_country\").val(shippingAddress.country)\n\n            $(\"#shipping_address_1\").val(shippingAddress.addressLine1)\n            $(\"#shipping_postcode\").val(shippingAddress.postalCode)\n            $(\"#shipping_city\").val(shippingAddress.city)\n            $(\"#shipping_country\").val(shippingAddress.country)\n\n            if (consumer.company.hasOwnProperty(\"name\")) {\n                // B2B purchase\n                const company = consumer.company\n                const { firstName, lastName, email, phoneNumber } = company.contactDetails\n                const { prefix, number } = phoneNumber\n                $(\"#billing_company\").val(company.name)\n                $(\"#shipping_company\").val(company.name)\n                $(\"#billing_first_name\").val(firstName)\n                $(\"#billing_last_name\").val(lastName)\n                $(\"#shipping_first_name\").val(firstName)\n                $(\"#shipping_last_name\").val(lastName)\n                $(\"#billing_email\").val(email)\n                $(\"#billing_phone\").val(`${prefix}${number}`)\n                // trigger events for 3rd part plugins.\n                $(\"#billing_country\").change()\n                $(\"#billing_email\").change()\n                $(\"#billing_email\").blur()\n            } else {\n                // B2C purchase\n                const { firstName, lastName, email, phoneNumber } = consumer.privatePerson\n                const { prefix, number } = phoneNumber\n                $(\"#billing_company\").val(\"\")\n                $(\"#shipping_company\").val(\"\")\n                $(\"#billing_first_name\").val(firstName)\n                $(\"#billing_last_name\").val(lastName)\n                $(\"#shipping_first_name\").val(firstName)\n                $(\"#shipping_last_name\").val(lastName)\n                $(\"#billing_email\").val(email)\n                // trigger events for 3rd part plugins.\n                $(\"#billing_email\").change()\n                $(\"#billing_email\").blur()\n                $(\"#billing_phone\").val(`${prefix}${number}`)\n            }\n\n            // eslint-disable-next-line eqeqeq\n            if (shippingAddress.addressLine2 != null) {\n                $(\"#billing_address_2\").val(shippingAddress.addressLine2)\n                $(\"#shipping_address_2\").val(shippingAddress.addressLine2)\n            }\n\n            // Check Terms checkbox, if it exists\n            if ($(dibsEasyForWoocommerce.wooTerms).length > 0) {\n                $(dibsEasyForWoocommerce.wooTerms).prop(\"checked\", true)\n            }\n            $(\"input#ship-to-different-address-checkbox\").prop(\"checked\", true)\n            dibsEasyForWoocommerce.submitOrder()\n        },\n        /**\n         * Submit the order using the WooCommerce AJAX function.\n         */\n        submitOrder() {\n            $(\".woocommerce-checkout-review-order-table\").block({\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            })\n            $.ajax({\n                type: \"POST\",\n                url: wcDibsEasy.submitOrder,\n                data: $(\"form.checkout\").serialize(),\n                dataType: \"json\",\n                success(data) {\n                    try {\n                        if (\"success\" === data.result) {\n                            dibsEasyForWoocommerce.logToFile(\"Successfully placed order.\")\n                            window.sessionStorage.setItem(\"redirectNets\", data.redirect)\n                            dibsEasyForWoocommerce.dibsCheckout.send(\"payment-order-finalized\", true)\n                        } else {\n                            throw \"Result failed\"\n                        }\n                    } catch (err) {\n                        if (data.messages) {\n                            dibsEasyForWoocommerce.logToFile(\"Checkout error | \" + data.messages)\n                            dibsEasyForWoocommerce.failOrder(\"submission\", data.messages)\n                        } else {\n                            dibsEasyForWoocommerce.logToFile(\"Checkout error | No message\")\n                            dibsEasyForWoocommerce.failOrder(\n                                \"submission\",\n                                '<div class=\"woocommerce-error\">' + \"Checkout error\" + \"</div>\"\n                            )\n                        }\n                    }\n                },\n                error(data) {\n                    try {\n                        dibsEasyForWoocommerce.logToFile(\"AJAX error | \" + JSON.stringify(data))\n                    } catch (e) {\n                        dibsEasyForWoocommerce.logToFile(\"AJAX error | Failed to parse error message.\")\n                    }\n                    dibsEasyForWoocommerce.failOrder(\n                        \"ajax-error\",\n                        '<div class=\"woocommerce-error\">Internal Server Error</div>'\n                    )\n                },\n            })\n        },\n        /**\n         * When the customer changes from Dibs Easy to other payment methods.\n         *\n         * @param {Event} e\n         */\n        changeFromDibsEasy(e) {\n            e.preventDefault()\n            $(dibsEasyForWoocommerce.checkoutFormSelector).block({\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            })\n            $.ajax({\n                type: \"POST\",\n                dataType: \"json\",\n                async: true,\n                url: wcDibsEasy.change_payment_method_url,\n                data: {\n                    action: \"dibs_change_payment_method\",\n                    dibs_easy: false,\n                    nonce: wcDibsEasy.nets_checkout_nonce,\n                },\n                success(data) {},\n                error(data) {},\n                complete(data) {\n                    console.log(\"Change payment method success\")\n                    console.log(data.responseJSON.data.redirect)\n                    dibsEasyForWoocommerce.bodyEl.removeClass(\"dibs-selected\")\n                    window.location.href = data.responseJSON.data.redirect\n                },\n            })\n        },\n        /**\n         * Moves all non-standard fields to the extra checkout fields.\n         */\n        moveExtraCheckoutFields() {\n            // Move order comments.\n            $(\".woocommerce-additional-fields\").appendTo(\"#dibs-extra-checkout-fields\")\n\n            const form = $('form[name=\"checkout\"] input, form[name=\"checkout\"] select, textarea')\n            for (let i = 0; i < form.length; i++) {\n                const name = form[i].name\n                const fields = dibsEasyForWoocommerce.standardWooFields\n                // Check if this is a standard field.\n                if ($.inArray(name, fields) === -1) {\n                    // This is not a standard Woo field, move to our div.\n                    $(\"p#\" + name + \"_field\").appendTo(\"#dibs-extra-checkout-fields\")\n                }\n            }\n        },\n        /**\n         * Logs the message to the Dibs Easy log in WooCommerce.\n         *\n         * @param {string} message\n         */\n        logToFile(message) {\n            $.ajax({\n                url: wcDibsEasy.log_to_file_url,\n                type: \"POST\",\n                dataType: \"json\",\n                data: {\n                    message,\n                    nonce: wcDibsEasy.log_to_file_nonce,\n                },\n            })\n        },\n        /**\n         * Fails the order with Dibs Easy on a checkout error and timeout.\n         *\n         * @param {string} event\n         * @param {string} errorMessage\n         */\n        failOrder(event, errorMessage) {\n            const errorClasses = \"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\"\n            const errorWrapper = `<div class=\"${errorClasses}\">${errorMessage}</div>`\n\n            // Send false and cancel\n            dibsEasyForWoocommerce.dibsCheckout.send(\"payment-order-finalized\", false)\n            // Renable the form.\n            dibsEasyForWoocommerce.bodyEl.trigger(\"updated_checkout\")\n            $(dibsEasyForWoocommerce.checkoutFormSelector).removeClass(\"processing\")\n            // $( dibsEasyForWoocommerce.checkoutFormSelector ).unblock();\n            // $( '.woocommerce-checkout-review-order-table' ).unblock();\n\n            // Print error messages, and trigger checkout_error, and scroll to notices.\n            $(\".woocommerce-NoticeGroup-checkout,\" + \".woocommerce-error,\" + \".woocommerce-message\").remove()\n\n            $(dibsEasyForWoocommerce.checkoutFormSelector).prepend(errorWrapper)\n            // $( dibsEasyForWoocommerce.checkoutFormSelector )\n            // \t.removeClass( 'processing' )\n            // \t.unblock();\n            $(dibsEasyForWoocommerce.checkoutFormSelector)\n                .find(\".input-text, select, input:checkbox\")\n                .trigger(\"validate\")\n                .blur()\n            $(document.body).trigger(\"checkout_error\", [errorMessage])\n            $(\"html, body\").animate(\n                {\n                    scrollTop: $(dibsEasyForWoocommerce.checkoutFormSelector).offset().top - 100,\n                },\n                1000\n            )\n        },\n    }\n\n    dibsEasyForWoocommerce.init()\n})\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","jQuery","$","wcDibsEasy","dibsEasyForWoocommerce","bodyEl","paymentMethodEl","dibsCheckout","blocked","selectAnotherSelector","checkoutInitiated","dibsOrderProcessing","checkoutFormSelector","standardWooFields","standard_woo_checkout_fields","wooTerms","init","document","ready","loadDibs","on","changeFromDibsEasy","dibsIsSelected","length","paymentMethod","filter","val","moveExtraCheckoutFields","initDibsCheckout","updateCheckout","updatedCheckout","paymentCompleted","response","logToFile","concat","paymentId","redirectUrl","sessionStorage","getItem","window","location","href","displayMustLoginError","message","mustLoginNotice","prepend","updateAddress","data","updateNeeded","country","postCode","mustLogin","mustLoginMessage","freezeCheckout","etop","offset","top","animate","scrollTop","thawCheckout","body","trigger","console","log","undefined","Dibs","unblock","addressChanged","address","ajax","type","dataType","async","url","customer_address_updated_url","action","nonce","nets_checkout_nonce","success","error","complete","responseJSON","Checkout","checkoutKey","privateKey","dibs_payment_id","containerId","language","locale","getDibsEasyOrder","get_order_data_url","failOrder","redirect","setAddressData","consumer","payment","billingAddress","shippingAddress","hasBillingData","Array","isArray","addressLine1","postalCode","city","company","hasOwnProperty","_company$contactDetai","contactDetails","firstName","lastName","email","phoneNumber","prefix","number","name","change","blur","_consumer$privatePers","privatePerson","addressLine2","prop","submitOrder","block","overlayCSS","background","opacity","serialize","result","setItem","send","err","messages","JSON","stringify","e","preventDefault","change_payment_method_url","dibs_easy","removeClass","appendTo","form","i","fields","inArray","log_to_file_url","log_to_file_nonce","event","errorMessage","errorWrapper","remove","find"],"sourceRoot":""}